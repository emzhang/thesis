\contentsline {chapter}{\numberline {1}Introduction}{15}
\contentsline {section}{\numberline {1.1}Motivation}{15}
\contentsline {subsection}{\numberline {1.1.1}Why Compare Music?}{15}
\contentsline {subsection}{\numberline {1.1.2}Why Correct Music?}{16}
\contentsline {section}{\numberline {1.2}Chapter Summary}{17}
\contentsline {chapter}{\numberline {2}Background and Related Work}{19}
\contentsline {section}{\numberline {2.1}Musical Terminology}{19}
\contentsline {subsection}{\numberline {2.1.1}OMR}{19}
\contentsline {subsection}{\numberline {2.1.2}MIDI}{19}
\contentsline {subsection}{\numberline {2.1.3}Ground Truth}{20}
\contentsline {section}{\numberline {2.2}Non-musical Work in Sequence Alignment}{20}
\contentsline {subsection}{\numberline {2.2.1}An Overview of Sequence Alignment}{20}
\contentsline {subsubsection}{\numberline {2.2.1.1}Edit Distance}{21}
\contentsline {subsubsection}{\numberline {2.2.1.2}Alignment}{23}
\contentsline {section}{\numberline {2.3}Turning Sequence Alignment into a Musical Problem}{26}
\contentsline {section}{\numberline {2.4}Related Work}{27}
\contentsline {subsection}{\numberline {2.4.1}Typke: Music Retrieval based on Melodic Similarity}{27}
\contentsline {subsection}{\numberline {2.4.2}Church and Cuthbert: Rhythmic Comparison and Alignment}{27}
\contentsline {subsection}{\numberline {2.4.3}Viro: Peachnote, Musical Score Search and Analysis and IMSLP}{28}
\contentsline {subsection}{\numberline {2.4.4}White: Statistical Properties of Music and MIDI}{28}
\contentsline {subsection}{\numberline {2.4.5}Rebelo et al: Optical Music Recognition - State-of-the-Art and Open Issues}{28}
\contentsline {subsection}{\numberline {2.4.6}OpenScore}{29}
\contentsline {chapter}{\numberline {3}Previous Work}{31}
\contentsline {section}{\numberline {3.1}A Modular Universal Hasher}{31}
\contentsline {subsection}{\numberline {3.1.1}Why Musical Comparison and Alignment Needs a Modular Hashing Function}{32}
\contentsline {subsection}{\numberline {3.1.2}Previous Work on Modular Hashing Functions}{33}
\contentsline {subsection}{\numberline {3.1.3}Overview of System}{34}
\contentsline {subsubsection}{\numberline {3.1.3.1}Pre-Hashing: High Level Hasher Settings}{35}
\contentsline {subsubsection}{\numberline {3.1.3.2}Pre-Hashing: Low Level General Settings}{35}
\contentsline {subsubsection}{\numberline {3.1.3.3}Pre-Hashing: Low Level Note Settings}{36}
\contentsline {subsubsection}{\numberline {3.1.3.4}Pre-Hashing: Low Level Chord Hashing Settings}{37}
\contentsline {subsubsection}{\numberline {3.1.3.5}Hashing: \texttt {hashStream}, the engine}{37}
\contentsline {subsubsection}{\numberline {3.1.3.6}Hashing: Setting up \texttt {ValidTypes} and \texttt {StateVars}}{37}
\contentsline {subsection}{\numberline {3.1.4}Hashing: Preprocessing the Stream}{38}
\contentsline {subsubsection}{\numberline {3.1.4.1}Hashing: Creating a List of Elements to be Hashed}{38}
\contentsline {subsubsection}{\numberline {3.1.4.2}Hashing: Building a Set of Hashing Functions}{38}
\contentsline {subsubsection}{\numberline {3.1.4.3}Hashing: Creating a \texttt {NoteHash} for Every Element}{38}
\contentsline {subsubsection}{\numberline {3.1.4.4}Hashing: Building \texttt {finalHash}}{39}
\contentsline {section}{\numberline {3.2}Low-level Object Comparison Optimizations}{39}
\contentsline {chapter}{\numberline {4}Final Implementation}{41}
\contentsline {section}{\numberline {4.1}OMRMIDICorrector}{42}
\contentsline {subsection}{\numberline {4.1.1}System Overview}{42}
\contentsline {subsubsection}{\numberline {4.1.1.1}processRunner: preprocessStreams}{43}
\contentsline {subsubsection}{\numberline {4.1.1.2}processRunner: setupHasher}{45}
\contentsline {subsubsection}{\numberline {4.1.1.3}processRunner: alignStreams}{45}
\contentsline {subsubsection}{\numberline {4.1.1.4}processRunner: fixStreams}{45}
\contentsline {section}{\numberline {4.2}Hasher}{46}
\contentsline {subsection}{\numberline {4.2.1}The Default Hasher}{46}
\contentsline {subsection}{\numberline {4.2.2}NoteHashWithReference}{46}
\contentsline {section}{\numberline {4.3}Aligner}{47}
\contentsline {subsection}{\numberline {4.3.1}System Overview}{47}
\contentsline {subsection}{\numberline {4.3.2}Producing a Global Alignment}{48}
\contentsline {subsubsection}{\numberline {4.3.2.1}Pre-Alignment: Setting Appropriate Parameters}{48}
\contentsline {subsubsection}{\numberline {4.3.2.2}Pre-Alignment: Hashing the Streams}{49}
\contentsline {subsubsection}{\numberline {4.3.2.3}Alignment: Initializing the Distance Matrix}{49}
\contentsline {subsubsection}{\numberline {4.3.2.4}Alignment: Populating the Distance Matrix}{50}
\contentsline {subsubsection}{\numberline {4.3.2.5}Alignment: Backtrace to Find the Best Alignment and Create the Changes List}{52}
\contentsline {subsubsection}{\numberline {4.3.2.6}Post-Alignment: Measures of Similarity}{53}
\contentsline {subsubsection}{\numberline {4.3.2.7}Post-Alignment: Visual Display of Alignment}{53}
\contentsline {section}{\numberline {4.4}Fixer}{56}
\contentsline {section}{\numberline {4.5}Tradeoffs and Design Decisions}{57}
\contentsline {subsection}{\numberline {4.5.1}Modularity vs. Simplicity}{57}
\contentsline {subsubsection}{\numberline {4.5.1.1}A Variety of Settings and a Longer Setup}{57}
\contentsline {subsubsection}{\numberline {4.5.1.2}Length Agnosticism}{58}
\contentsline {subsection}{\numberline {4.5.2}Performance vs. Space and Object Overhead}{58}
\contentsline {subsubsection}{\numberline {4.5.2.1}NoteHashWithReference}{58}
\contentsline {subsubsection}{\numberline {4.5.2.2}Creating One Hasher and Many Aligners}{58}
\contentsline {subsection}{\numberline {4.5.3}Manual User Input}{59}
\contentsline {chapter}{\numberline {5}Results and Testing}{61}
\contentsline {section}{\numberline {5.1}Example 1: Eine kleine Nachtmusik, K.525- I.Allegro, W. A. Mozart)}{61}
\contentsline {subsection}{\numberline {5.1.1}Musical Properties of K.525}{62}
\contentsline {subsubsection}{\numberline {5.1.1.1}Bass and Cello Doubling}{63}
\contentsline {subsubsection}{\numberline {5.1.1.2}Tremolos}{63}
\contentsline {subsection}{\numberline {5.1.2}Preparing the Raw Input}{63}
\contentsline {subsection}{\numberline {5.1.3}Running \texttt {OMRMIDICorrector} on K.525}{64}
\contentsline {subsubsection}{\numberline {5.1.3.1}A Closer Look at Specifics of \texttt {processrunner}}{73}
\contentsline {subsection}{\numberline {5.1.4}Example 1: Similarity Metrics in K.525}{73}
\contentsline {section}{\numberline {5.2}Example 2: String Quartet No.7 in E-flat major, K.160/159a- I.Allegro, W. A. Mozart)}{74}
\contentsline {subsection}{\numberline {5.2.1}Running \texttt {EnharmonicFixer} on K.160, Violin 1}{74}
\contentsline {subsection}{\numberline {5.2.2}Example 2: Analysis of Correction}{79}
\contentsline {section}{\numberline {5.3}Timing}{79}
\contentsline {chapter}{\numberline {6}Future Work}{81}
\contentsline {section}{\numberline {6.1}Future Fixers}{81}
